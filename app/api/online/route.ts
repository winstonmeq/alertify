import { PrismaClient } from "@prisma/client";
import { NextResponse } from "next/server";
import admin from "firebase-admin";

const prisma = new PrismaClient();
const VERIFY_TOKEN = "mySecretAlertifyToken2025";

// Define the Emergency type based on your Prisma schema
interface Emergency {
  id?: string; // Optional since itâ€™s auto-generated by Prisma
  emergency: string;
  lat: string;
  long: string;
  barangay: string;
  munName:string;
  name: string;
  mobile: string;
  munId: string;
  provId: string;
  photoURL: string;
  createdAt?: Date; // Optional, added by Prisma
}

if (!admin.apps.length) {
  admin.initializeApp({
    credential: admin.credential.cert({
      projectId: process.env.FIREBASE_PROJECT_ID,
      privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g, "\n"),
      clientEmail: process.env.FIREBASE_CLIENT_EMAIL,
      
    }),
  });
}

async function sendFcmNotification(data: Emergency) {
  const { emergency, name, munId } = data;
  // const topic ="presroxascot2025"
  try {
    await admin.messaging().send({
      notification: {
        title: "Emergency Reported!",
        body: `${name} reported a ${emergency} incident!`,
      },
      topic: munId,
    });
    console.log("Online FCM notification sent successfully");
  } catch (error) {
    console.error("Failed to send FCM notification:", error);
  }
}


export async function POST(request: Request) {
  const { searchParams } = new URL(request.url);
  const token = searchParams.get("token");

  if (token !== VERIFY_TOKEN) {
    return new NextResponse("Verification failed", { status: 403 });
  }

  try {
    const requestBody = await request.json();
    const { emergency, lat, long, barangay, munName, name, mobile, munId, provId, photoURL, } = requestBody;

    if (!emergency || !lat || !long  || !barangay || !name || !mobile) {
      return NextResponse.json({ error: "Missing required fields" }, { status: 400 });
    }

    // Save data to the database using Prisma
    const savedData = await prisma.emergency.create({
      data: { emergency, lat, long, barangay, munName, name, mobile, munId, provId, status: true, verified: false, photoURL },
    });

    // Send FCM notification asynchronously
    sendFcmNotification(savedData).catch(console.error);

    //send response to the client
    return NextResponse.json(
      { message: "Emergency data saved successfully" },
      { status: 201 }
    );


  } catch (error) {
    console.error("Error during saving data:", error);
    return NextResponse.json({ message: "Failed to save data" }, { status: 500 });
  } finally {
    await prisma.$disconnect();
  }
}